Function :- function is a wrap of code or statement that perform certain task or operation.

Console.log=>


*Argument and Parameter to function :-
        function defintion -> Parameter
        function calling -> Argument

=> Variable Argument:- 
   1) Argument Object 
   2) Spread Operator

=> Function Expression 
 -> why we need it ?
 -> How to identify if a function within function is decleration or Expression

=> Why in JS we consider function as a first class citizen?
  -> you can store the function 
  -> you can pass an Argument
  -> return function from function 

=> function Decleration or expression:
 ->defintion:- if the first valid word is not function in a statement then it is function expression

   const h=function functionname()
   {
    //this is function expression
   }

   function functionname()
   {
     //this is function decleration
   }

   (function (){
     //function expression
   })()

   (function exc(){
        //function expression
   })

=>Difference between function decleration and function expression?
  -> scopinng mechanism is Difference

=> Type of Function Expression
  1) named function expression  

      const isEvenOdd=function process(num){
        return (num%2==0)
      }
     const result=process(23)
      console.log(result)
  2) ananymous function expression

      const isEvenOdd=function (num){
        return (num%2==0)
      }
      const result=isEvenOdd(23)
      console.log(result)

  3) IIFE (Immediately Invoked Function Expression)  

=> Why Named Function Expression is important

   1)Debugging 
     -> we can easilt debug the code at what order we call the function by using console.trace
   2)Recursion
      -> call stack 
   3)Readability
      -> any one can easily read the code 

=> Dont use function ananymous passing an argument that time used named function expression